name: DBT CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  get-config:
    runs-on: ubuntu-latest

    outputs:
      pre_commit: ${{ steps.set_output_variables.outputs.pre_commit }}
      tests: ${{ steps.set_output_variables.outputs.tests }}
      ecr: ${{ steps.set_output_variables.outputs.ecr }}
      docker_hub: ${{ steps.set_output_variables.outputs.docker_hub }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Show current location
        run: ls

      - name: Install jq
        run: sudo apt-get install jp

      - name: Read config file
        run: |
          CONFIG_PATH='./config.json'
          echo "Reading config file $CONFIG_PATH"
          RUN_PRE_COMMIT_HOOKS=$(jq -r '.run_pre_commit_hooks' $CONFIG_PATH)
          RUN_TESTS=$(jq -r '.run_tests' $CONFIG_PATH)
          DEPLOY_TO_DOCKER_HUB=$(jq -r '.deploy_to_docker_hub' $CONFIG_PATH)
          DEPLOY_TO_ECR=$(jq -r '.deploy_to_ecr' $CONFIG_PATH)

          echo "RUN_PRE_COMMIT_HOOKS=$RUN_PRE_COMMIT_HOOKS" >> $GITHUB_ENV
          echo "RUN_TESTS=$RUN_TESTS" >> $GITHUB_ENV
          echo "DEPLOY_TO_DOCKER_HUB=$DEPLOY_TO_DOCKER_HUB" >> $GITHUB_ENV
          echo "DEPLOY_TO_ECR=$DEPLOY_TO_ECR" >> $GITHUB_ENV

      - name: Use config variables
        run: |
          echo "Run pre-commit-hooks: $RUN_PRE_COMMIT_HOOKS"
          echo "Run tests: $RUN_TESTS"
          echo "Deploy to docker hub: $DEPLOY_TO_DOCKER_HUB"
          echo "Deploy ro ECR: $DEPLOY_TO_ECR"

      - id: set_output_variables
        run: |
          echo "pre_commit=$RUN_PRE_COMMIT_HOOKS" >> $GITHUB_OUTPUT
          echo "tests=$RUN_TESTS" >> $GITHUB_OUTPUT
          echo "ecr=$DEPLOY_TO_ECR" >> $GITHUB_OUTPUT
          echo "docker_hub=$DEPLOY_TO_DOCKER_HUB" >> $GITHUB_OUTPUT

  setup:
    needs: get-config
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Cache venv
        id: cache-venv
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip python3-venv
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install dbt-snowflake pre-commit

      - name: Generate cache key
        id: cache-key
        run: echo "::set-output name=key::${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}"

  pre-commit-checks:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Cache venv
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Run pre-commit checks
        run: |
          source venv/bin/activate
          pre-commit run --all-files

  setup-dbt-profile:
    needs: pre-commit-checks
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up dbt profile
        run: |
          mkdir -p /home/runner/.dbt
          echo "$DBT_PROFILE_CONTENTS" > /home/runner/.dbt/profiles.yml
        env:
          DBT_PROFILE_CONTENTS: ${{ secrets.DBT_PROFILE_CONTENTS }}

  dbt-tests:
    needs: [setup-dbt-profile, setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Cache venv
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Set up dbt profile
        run: |
            mkdir -p /home/runner/.dbt
            echo "$DBT_PROFILE_CONTENTS" > /home/runner/.dbt/profiles.yml
        env:
            DBT_PROFILE_CONTENTS: ${{ secrets.DBT_PROFILE_CONTENTS }}

      - name: Run dbt tests
        run: |
            source venv/bin/activate
            cd ./dbt_project
            dbt deps
            dbt test
        env:
            SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
            SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}

  dbt-build:
    needs: [setup-dbt-profile, setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Cache venv
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ needs.setup.outputs.cache-key }}

      - name: Set up dbt profile
        run: |
            mkdir -p /home/runner/.dbt
            echo "$DBT_PROFILE_CONTENTS" > /home/runner/.dbt/profiles.yml
        env:
            DBT_PROFILE_CONTENTS: ${{ secrets.DBT_PROFILE_CONTENTS }}

      - name: Run dbt models
        run: |
            source venv/bin/activate
            cd ./dbt_project
            dbt deps
            dbt run
        env:
            SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
            SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
